// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Handling server-side responses Handling a non-descript server side error 1`] = `
<AddSubject
  enabled={true}
  onPatientRegistered={[MockFunction]}
  patientId="PID_01"
  patientIdentifierSources={
    Array [
      "HIS_01",
    ]
  }
  patientRegistrationApi={
    Object {
      "error": Object {
        "response": Object {
          "data": Object {
            "issues": Array [
              Object {
                "field": null,
                "message": "A SERVER SIDE ERROR",
                "reference": null,
              },
            ],
          },
        },
      },
      "put": [Function],
      "registerSubjectRequest": Object {
        "birthDate": "2019-03-03",
        "dateOfConsent": "2019-04-12",
        "edcSubjectReference": "SUB_01_REF",
        "firstName": "",
        "lastName": "",
        "patientId": Object {
          "id": "PID_01",
          "source": "HIS_01",
        },
        "studyId": "SID_01",
      },
      "shouldError": true,
    }
  }
  patientSource="HIS_01"
  studyId="SID_01"
>
  <AddSubjectPane
    dateOfBirth={2019-03-02T23:00:00.000Z}
    dateOfBirthInfoText="The participant's date of birth"
    dateOfConsent={2019-04-12T00:00:00.000Z}
    dateOfConsentInfoText="Date at which the patient has given informed consent to enter the study"
    dateOfConsentValid={true}
    disabled={false}
    error={
      Object {
        "response": Object {
          "data": Object {
            "issues": Array [
              Object {
                "field": null,
                "message": "A SERVER SIDE ERROR",
                "reference": null,
              },
            ],
          },
        },
      }
    }
    errorMessages={Array []}
    firstName=""
    firstNameInfoText="The participant's first name"
    inProgress={false}
    lastName=""
    lastNameInfoText="The participant's last name"
    onClose={[Function]}
    onDateOfBirthChanged={[Function]}
    onDateOfConsentChanged={[Function]}
    onFirstNameChanged={[Function]}
    onLastNameChanged={[Function]}
    onOpen={[Function]}
    onPatientIdentifierChanged={[Function]}
    onPatientIdentifierSourceChanged={[Function]}
    onSubjectAdded={[Function]}
    onSubjectIdentifierChanged={[Function]}
    open={true}
    patientIdentifier="PID_01"
    patientIdentifierInfoText="Identifier used to reference the participant within the healthcare source systems. The patient id is only visible to investigators and is not exported to the linked sponsor's EDC system"
    patientIdentifierSource="HIS_01"
    patientIdentifierSourceInfoText="Domain in which the patient identifier was issued by the patient identification management system (MPI)"
    patientIdentifierSources={
      Array [
        "HIS_01",
      ]
    }
    patientIdentifierValid={true}
    subjectIdentifier="SUB_01_REF"
    subjectIdentifierInfoText="Identifier used to reference the participant in this study (as issued by the IVRS or a similar system)"
    subjectIdentifierValid={true}
  >
    <OpenState
      dateOfBirth={2019-03-02T23:00:00.000Z}
      dateOfBirthInfoText="The participant's date of birth"
      dateOfConsent={2019-04-12T00:00:00.000Z}
      dateOfConsentInfoText="Date at which the patient has given informed consent to enter the study"
      dateOfConsentValid={true}
      error={
        Object {
          "response": Object {
            "data": Object {
              "issues": Array [
                Object {
                  "field": null,
                  "message": "A SERVER SIDE ERROR",
                  "reference": null,
                },
              ],
            },
          },
        }
      }
      errorMessages={Array []}
      firstName=""
      firstNameInfoText="The participant's first name"
      inProgress={false}
      lastName=""
      lastNameInfoText="The participant's last name"
      onClose={[Function]}
      onDateOfBirthChanged={[Function]}
      onDateOfConsentChanged={[Function]}
      onFirstNameChanged={[Function]}
      onLastNameChanged={[Function]}
      onPatientIdentifierChanged={[Function]}
      onPatientIdentifierSourceChanged={[Function]}
      onSubjectAdded={[Function]}
      onSubjectIdentifierChanged={[Function]}
      patientIdentifier="PID_01"
      patientIdentifierInfoText="Identifier used to reference the participant within the healthcare source systems. The patient id is only visible to investigators and is not exported to the linked sponsor's EDC system"
      patientIdentifierSource="HIS_01"
      patientIdentifierSourceInfoText="Domain in which the patient identifier was issued by the patient identification management system (MPI)"
      patientIdentifierSources={
        Array [
          "HIS_01",
        ]
      }
      patientIdentifierValid={true}
      subjectIdentifier="SUB_01_REF"
      subjectIdentifierInfoText="Identifier used to reference the participant in this study (as issued by the IVRS or a similar system)"
      subjectIdentifierValid={true}
    >
      <Modal
        inProgress={false}
        onClose={[Function]}
        onOkButtonClick={[Function]}
        open={true}
        title="Register participant"
      >
        <Modal
          ariaHideApp={true}
          bodyOpenClassName="ReactModal__Body--open"
          closeTimeoutMS={0}
          isOpen={true}
          onRequestClose={[Function]}
          parentSelector={[Function]}
          portalClassName="react-modal"
          role="dialog"
          shouldCloseOnEsc={true}
          shouldCloseOnOverlayClick={false}
          shouldFocusAfterRender={true}
          shouldReturnFocusAfterClose={true}
          style={
            Object {
              "content": Object {
                "maxHeight": "688px",
                "width": "450px",
              },
            }
          }
          title="Register participant"
        >
          <Portal
            containerInfo={
              <div
                class="react-modal"
              >
                <div
                  class="ReactModal__Overlay ReactModal__Overlay--after-open"
                >
                  <div
                    class="ReactModal__Content ReactModal__Content--after-open"
                    role="dialog"
                    style="width: 450px; max-height: 688px;"
                    tabindex="-1"
                  >
                    <div
                      class="modal-titlebar"
                    >
                      <div
                        class="modal-title"
                      >
                        Register participant
                      </div>
                      <div
                        class="modal-close-icon"
                      >
                        <i
                          class="fa fa-times"
                        />
                      </div>
                    </div>
                    <div
                      class="modal-content"
                    >
                      <form>
                        <table>
                          <tbody>
                            <tr>
                              <th>
                                First name 
                                <i
                                  class="fa fa-info-circle"
                                  title="The participant's first name"
                                />
                              </th>
                              <td>
                                <input
                                  class="margin-none first-name-field"
                                  name="firstName"
                                  placeholder="First name"
                                  type="text"
                                />
                              </td>
                            </tr>
                            <tr>
                              <th>
                                Last name 
                                <i
                                  class="fa fa-info-circle"
                                  title="The participant's last name"
                                />
                              </th>
                              <td>
                                <input
                                  class="margin-none last-name-field"
                                  name="lastName"
                                  placeholder="Last name"
                                  type="text"
                                />
                              </td>
                            </tr>
                            <tr>
                              <th>
                                Date of birth 
                                <i
                                  class="fa fa-info-circle"
                                  title="The participant's date of birth"
                                />
                              </th>
                              <td>
                                <div
                                  class="calendar-icon"
                                >
                                  <div
                                    class="react-datepicker-wrapper"
                                  >
                                    <div
                                      class="react-datepicker__input-container"
                                    >
                                      <input
                                        class="birth-date-field form-field-error"
                                        type="text"
                                        value="3 Mar 2019"
                                      />
                                    </div>
                                  </div>
                                </div>
                              </td>
                            </tr>
                            <tr>
                              <th>
                                EDC identifier 
                                <i
                                  class="fa fa-info-circle"
                                  title="Identifier used to reference the participant in this study (as issued by the IVRS or a similar system)"
                                />
                              </th>
                              <td>
                                <input
                                  class="subject-identifier-field"
                                  name="subjectIdentifier"
                                  placeholder="Subject identifier"
                                  required=""
                                  type="text"
                                  value="SUB_01_REF"
                                />
                              </td>
                            </tr>
                            <tr>
                              <th>
                                EHR identifier 
                                <i
                                  class="fa fa-info-circle"
                                  title="Identifier used to reference the participant within the healthcare source systems. The patient id is only visible to investigators and is not exported to the linked sponsor's EDC system"
                                />
                              </th>
                              <td>
                                <div
                                  class="autocomplete-override"
                                >
                                  <div
                                    style="display: inline-block;"
                                  >
                                    <input
                                      aria-autocomplete="list"
                                      aria-expanded="false"
                                      autocomplete="off"
                                      class="patient-identifier-field"
                                      placeholder="Select EHR ID"
                                      role="combobox"
                                      type="text"
                                      value="PID_01"
                                    />
                                  </div>
                                </div>
                              </td>
                            </tr>
                            <tr>
                              <th>
                                Date of consent 
                                <i
                                  class="fa fa-info-circle"
                                  title="Date at which the patient has given informed consent to enter the study"
                                />
                              </th>
                              <td>
                                <div
                                  class="calendar-icon"
                                >
                                  <div
                                    class="react-datepicker-wrapper"
                                  >
                                    <div
                                      class="react-datepicker__input-container"
                                    >
                                      <input
                                        class="consent-date-field"
                                        type="text"
                                        value="12 Apr 2019"
                                      />
                                    </div>
                                  </div>
                                </div>
                              </td>
                            </tr>
                          </tbody>
                        </table>
                        <button
                          style="display: none;"
                          type="submit"
                        />
                      </form>
                      <div
                        class="alert-box alert margin-top"
                      >
                        The form returned some errors
                        <ul
                          class="bullet"
                        />
                        <ul
                          class="bullet"
                        >
                          <li>
                            A SERVER SIDE ERROR
                          </li>
                        </ul>
                      </div>
                    </div>
                    <div
                      class="modal-buttons"
                    >
                      <a
                        class="button modal-ok "
                        data-cy="modal-ok-button"
                      >
                        OK
                        <div
                          class="bar"
                        />
                      </a>
                      <a
                        class="button secondary modal-cancel"
                      >
                        Cancel
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            }
          >
            <ModalPortal
              ariaHideApp={true}
              bodyOpenClassName="ReactModal__Body--open"
              closeTimeoutMS={0}
              defaultStyles={Object {}}
              isOpen={true}
              onRequestClose={[Function]}
              parentSelector={[Function]}
              portalClassName="react-modal"
              role="dialog"
              shouldCloseOnEsc={true}
              shouldCloseOnOverlayClick={false}
              shouldFocusAfterRender={true}
              shouldReturnFocusAfterClose={true}
              style={
                Object {
                  "content": Object {
                    "maxHeight": "688px",
                    "width": "450px",
                  },
                }
              }
              title="Register participant"
            >
              <div
                className="ReactModal__Overlay ReactModal__Overlay--after-open"
                onClick={[Function]}
                onMouseDown={[Function]}
                style={Object {}}
              >
                <div
                  className="ReactModal__Content ReactModal__Content--after-open"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onMouseUp={[Function]}
                  role="dialog"
                  style={
                    Object {
                      "maxHeight": "688px",
                      "width": "450px",
                    }
                  }
                  tabIndex="-1"
                >
                  <div
                    className="modal-titlebar"
                  >
                    <div
                      className="modal-title"
                    >
                      Register participant
                    </div>
                    <div
                      className="modal-close-icon"
                      onClick={[Function]}
                    >
                      <i
                        className="fa fa-times"
                      />
                    </div>
                  </div>
                  <div
                    className="modal-content"
                  >
                    <Form
                      dateOfBirth={2019-03-02T23:00:00.000Z}
                      dateOfBirthInfoText="The participant's date of birth"
                      dateOfConsent={2019-04-12T00:00:00.000Z}
                      dateOfConsentInfoText="Date at which the patient has given informed consent to enter the study"
                      dateOfConsentValid={true}
                      firstName=""
                      firstNameInfoText="The participant's first name"
                      lastName=""
                      lastNameInfoText="The participant's last name"
                      onDateOfBirthChanged={[Function]}
                      onDateOfConsentChanged={[Function]}
                      onFirstNameChanged={[Function]}
                      onLastNameChanged={[Function]}
                      onPatientIdentifierChanged={[Function]}
                      onPatientIdentifierSourceChanged={[Function]}
                      onSubjectIdentifierChanged={[Function]}
                      patientIdentifier="PID_01"
                      patientIdentifierInfoText="Identifier used to reference the participant within the healthcare source systems. The patient id is only visible to investigators and is not exported to the linked sponsor's EDC system"
                      patientIdentifierSource="HIS_01"
                      patientIdentifierSourceInfoText="Domain in which the patient identifier was issued by the patient identification management system (MPI)"
                      patientIdentifierSources={
                        Array [
                          "HIS_01",
                        ]
                      }
                      patientIdentifierValid={true}
                      subjectIdentifier="SUB_01_REF"
                      subjectIdentifierInfoText="Identifier used to reference the participant in this study (as issued by the IVRS or a similar system)"
                      subjectIdentifierValid={true}
                    >
                      <form
                        onSubmit={[Function]}
                      >
                        <table>
                          <tbody>
                            <FirstNameRow
                              firstName=""
                              firstNameInfoText="The participant's first name"
                              onFirstNameChanged={[Function]}
                            >
                              <tr>
                                <FirstNameHeader
                                  firstNameInfoText="The participant's first name"
                                >
                                  <th>
                                    First name 
                                    <i
                                      className="fa fa-info-circle"
                                      title="The participant's first name"
                                    />
                                  </th>
                                </FirstNameHeader>
                                <FirstNameCell
                                  firstName=""
                                  onFirstNameChanged={[Function]}
                                >
                                  <td>
                                    <FirstNameField
                                      firstName=""
                                      focus={false}
                                      onChange={[Function]}
                                    >
                                      <input
                                        autoFocus={false}
                                        className="margin-none first-name-field"
                                        name="firstName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder="First name"
                                        type="text"
                                      />
                                    </FirstNameField>
                                  </td>
                                </FirstNameCell>
                              </tr>
                            </FirstNameRow>
                            <LastNameRow
                              lastName=""
                              lastNameInfoText="The participant's last name"
                              onLastNameChanged={[Function]}
                            >
                              <tr>
                                <LastNameHeader
                                  lastNameInfoText="The participant's last name"
                                >
                                  <th>
                                    Last name 
                                    <i
                                      className="fa fa-info-circle"
                                      title="The participant's last name"
                                    />
                                  </th>
                                </LastNameHeader>
                                <LastNameCell
                                  lastName=""
                                  onLastNameChanged={[Function]}
                                >
                                  <td>
                                    <LastNameField
                                      focus={false}
                                      lastName=""
                                      onChange={[Function]}
                                    >
                                      <input
                                        autoFocus={false}
                                        className="margin-none last-name-field"
                                        name="lastName"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder="Last name"
                                        type="text"
                                      />
                                    </LastNameField>
                                  </td>
                                </LastNameCell>
                              </tr>
                            </LastNameRow>
                            <DateOfBirthRow
                              dateOfBirth={2019-03-02T23:00:00.000Z}
                              dateOfBirthInfoText="The participant's date of birth"
                              onDateOfBirthChanged={[Function]}
                            >
                              <tr>
                                <DateOfBirthHeader
                                  dateOfBirthInfoText="The participant's date of birth"
                                >
                                  <th>
                                    Date of birth 
                                    <i
                                      className="fa fa-info-circle"
                                      title="The participant's date of birth"
                                    />
                                  </th>
                                </DateOfBirthHeader>
                                <DateOfBirthCell
                                  dateOfBirth={2019-03-02T23:00:00.000Z}
                                  onDateOfBirthChanged={[Function]}
                                >
                                  <td>
                                    <div
                                      className="calendar-icon"
                                    >
                                      <t
                                        allowSameDay={false}
                                        className="birth-date-field form-field-error"
                                        dateFormat="d LLL yyyy"
                                        dateFormatCalendar="LLLL yyyy"
                                        disabled={false}
                                        disabledKeyboardNavigation={false}
                                        dropdownMode="scroll"
                                        inlineFocusSelectedMonth={false}
                                        maxDate={2019-03-02T23:00:00.000Z}
                                        monthsShown={1}
                                        nextMonthButtonLabel="Next Month"
                                        nextYearButtonLabel="Next Year"
                                        onBlur={[Function]}
                                        onCalendarClose={[Function]}
                                        onCalendarOpen={[Function]}
                                        onChange={[Function]}
                                        onClickOutside={[Function]}
                                        onFocus={[Function]}
                                        onInputClick={[Function]}
                                        onInputError={[Function]}
                                        onKeyDown={[Function]}
                                        onMonthChange={[Function]}
                                        onSelect={[Function]}
                                        onYearChange={[Function]}
                                        popperContainer={[Function]}
                                        preventOpenOnFocus={false}
                                        previousMonthButtonLabel="Previous Month"
                                        previousYearButtonLabel="Previous Year"
                                        readOnly={false}
                                        renderDayContents={[Function]}
                                        selected={2019-03-02T23:00:00.000Z}
                                        shouldCloseOnSelect={true}
                                        showMonthYearPicker={false}
                                        showPopperArrow={true}
                                        showPreviousMonths={false}
                                        showQuarterYearPicker={false}
                                        showTimeInput={false}
                                        showTimeSelect={false}
                                        strictParsing={false}
                                        timeCaption="Time"
                                        timeInputLabel="Time"
                                        timeIntervals={30}
                                        withPortal={false}
                                      >
                                        <t
                                          hidePopper={true}
                                          popperComponent={null}
                                          popperContainer={[Function]}
                                          popperModifiers={
                                            Object {
                                              "preventOverflow": Object {
                                                "boundariesElement": "viewport",
                                                "enabled": true,
                                                "escapeWithReference": true,
                                              },
                                            }
                                          }
                                          popperPlacement="bottom-start"
                                          popperProps={Object {}}
                                          targetComponent={
                                            <div
                                              className="react-datepicker__input-container"
                                            >
                                              <input
                                                className="birth-date-field form-field-error"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                readOnly={false}
                                                type="text"
                                                value="3 Mar 2019"
                                              />
                                            </div>
                                          }
                                        >
                                          <Manager
                                            className="react-datepicker-manager"
                                          >
                                            <Reference>
                                              <InnerReference
                                                setReferenceNode={[Function]}
                                              >
                                                <div
                                                  className="react-datepicker-wrapper"
                                                >
                                                  <div
                                                    className="react-datepicker__input-container"
                                                  >
                                                    <input
                                                      className="birth-date-field form-field-error"
                                                      disabled={false}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      readOnly={false}
                                                      type="text"
                                                      value="3 Mar 2019"
                                                    />
                                                  </div>
                                                </div>
                                              </InnerReference>
                                            </Reference>
                                            <CalendarContainer>
                                              <Portal
                                                container={null}
                                              />
                                            </CalendarContainer>
                                          </Manager>
                                        </t>
                                      </t>
                                    </div>
                                  </td>
                                </DateOfBirthCell>
                              </tr>
                            </DateOfBirthRow>
                            <EdcIdentifierRow
                              onSubjectIdentifierChanged={[Function]}
                              subjectIdentifier="SUB_01_REF"
                              subjectIdentifierInfoText="Identifier used to reference the participant in this study (as issued by the IVRS or a similar system)"
                              subjectIdentifierValid={true}
                            >
                              <tr>
                                <EdcIdentifierHeader
                                  subjectIdentifierInfoText="Identifier used to reference the participant in this study (as issued by the IVRS or a similar system)"
                                >
                                  <th>
                                    EDC identifier 
                                    <i
                                      className="fa fa-info-circle"
                                      title="Identifier used to reference the participant in this study (as issued by the IVRS or a similar system)"
                                    />
                                  </th>
                                </EdcIdentifierHeader>
                                <EdcIdentifierCell
                                  onSubjectIdentifierChanged={[Function]}
                                  subjectIdentifier="SUB_01_REF"
                                  subjectIdentifierValid={true}
                                >
                                  <td>
                                    <SubjectIdField
                                      disabled={false}
                                      inputProps={
                                        Object {
                                          "autoFocus": false,
                                        }
                                      }
                                      menuStyle={
                                        Object {
                                          "maxHeight": "16em",
                                        }
                                      }
                                      onChange={[Function]}
                                      openOnFocus={true}
                                      valid={true}
                                      value="SUB_01_REF"
                                    >
                                      <input
                                        autoFocus={false}
                                        className="subject-identifier-field"
                                        disabled={false}
                                        name="subjectIdentifier"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        placeholder="Subject identifier"
                                        required={true}
                                        type="text"
                                        value="SUB_01_REF"
                                      />
                                    </SubjectIdField>
                                  </td>
                                </EdcIdentifierCell>
                              </tr>
                            </EdcIdentifierRow>
                            <EhrIdentifierSourceRow
                              onPatientIdentifierSourceChanged={[Function]}
                              patientIdentifierSource="HIS_01"
                              patientIdentifierSourceInfoText="Domain in which the patient identifier was issued by the patient identification management system (MPI)"
                              patientIdentifierSources={
                                Array [
                                  "HIS_01",
                                ]
                              }
                            />
                            <EhrIdentifierRow
                              onPatientIdentifierChanged={[Function]}
                              patientIdentifier="PID_01"
                              patientIdentifierInfoText="Identifier used to reference the participant within the healthcare source systems. The patient id is only visible to investigators and is not exported to the linked sponsor's EDC system"
                              patientIdentifierValid={true}
                            >
                              <tr>
                                <EhrIdentifierHeader
                                  patientIdentifierInfoText="Identifier used to reference the participant within the healthcare source systems. The patient id is only visible to investigators and is not exported to the linked sponsor's EDC system"
                                >
                                  <th>
                                    EHR identifier 
                                    <i
                                      className="fa fa-info-circle"
                                      title="Identifier used to reference the participant within the healthcare source systems. The patient id is only visible to investigators and is not exported to the linked sponsor's EDC system"
                                    />
                                  </th>
                                </EhrIdentifierHeader>
                                <EhrIdentifierCell
                                  onPatientIdentifierChanged={[Function]}
                                  patientIdentifier="PID_01"
                                  patientIdentifierValid={true}
                                >
                                  <td>
                                    <PatientIdField
                                      availablePatients={
                                        Object {
                                          "patientIds": Array [],
                                        }
                                      }
                                      menuStyle={
                                        Object {
                                          "maxHeight": "8em",
                                        }
                                      }
                                      onChange={[Function]}
                                      valid={true}
                                      value="PID_01"
                                    >
                                      <AutocompleteInput
                                        alwaysRender={true}
                                        inputProps={
                                          Object {
                                            "className": "patient-identifier-field",
                                          }
                                        }
                                        menuStyle={
                                          Object {
                                            "maxHeight": "8em",
                                          }
                                        }
                                        onSelectionChange={[Function]}
                                        openOnFocus={true}
                                        options={Array []}
                                        placeholder="Select EHR ID"
                                      >
                                        <div
                                          className="autocomplete-override"
                                        >
                                          <Autocomplete
                                            autoHighlight={true}
                                            getItemValue={[Function]}
                                            inputProps={
                                              Object {
                                                "className": "patient-identifier-field",
                                              }
                                            }
                                            isItemSelectable={[Function]}
                                            items={Array []}
                                            menuStyle={
                                              Object {
                                                "background": "rgba(255, 255, 255, 0.9)",
                                                "borderRadius": "3px",
                                                "boxShadow": "0 2px 12px rgba(0, 0, 0, 0.1)",
                                                "fontSize": "90%",
                                                "maxHeight": "50%",
                                                "overflow": "auto",
                                                "padding": "2px 0",
                                                "position": "fixed",
                                              }
                                            }
                                            onChange={[Function]}
                                            onMenuVisibilityChange={[Function]}
                                            onSelect={[Function]}
                                            renderInput={[Function]}
                                            renderItem={[Function]}
                                            renderMenu={[Function]}
                                            selectOnBlur={false}
                                            shouldItemRender={[Function]}
                                            value="PID_01"
                                            wrapperProps={Object {}}
                                            wrapperStyle={
                                              Object {
                                                "display": "inline-block",
                                              }
                                            }
                                          >
                                            <div
                                              style={
                                                Object {
                                                  "display": "inline-block",
                                                }
                                              }
                                            >
                                              <input
                                                aria-autocomplete="list"
                                                aria-expanded={false}
                                                autoComplete="off"
                                                className="patient-identifier-field"
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                placeholder="Select EHR ID"
                                                role="combobox"
                                                type="text"
                                                value="PID_01"
                                              />
                                            </div>
                                          </Autocomplete>
                                        </div>
                                      </AutocompleteInput>
                                    </PatientIdField>
                                  </td>
                                </EhrIdentifierCell>
                              </tr>
                            </EhrIdentifierRow>
                            <DateOfConsentRow
                              dateOfConsent={2019-04-12T00:00:00.000Z}
                              dateOfConsentInfoText="Date at which the patient has given informed consent to enter the study"
                              dateOfConsentValid={true}
                              onDateOfConsentChanged={[Function]}
                            >
                              <tr>
                                <DateOfConsentHeader
                                  dateOfConsentInfoText="Date at which the patient has given informed consent to enter the study"
                                >
                                  <th>
                                    Date of consent 
                                    <i
                                      className="fa fa-info-circle"
                                      title="Date at which the patient has given informed consent to enter the study"
                                    />
                                  </th>
                                </DateOfConsentHeader>
                                <DateOfConsentCell
                                  dateOfConsent={2019-04-12T00:00:00.000Z}
                                  dateOfConsentValid={true}
                                  onDateOfConsentChanged={[Function]}
                                >
                                  <td>
                                    <div
                                      className="calendar-icon"
                                    >
                                      <t
                                        allowSameDay={false}
                                        className="consent-date-field"
                                        dateFormat="d LLL yyyy"
                                        dateFormatCalendar="LLLL yyyy"
                                        disabled={false}
                                        disabledKeyboardNavigation={false}
                                        dropdownMode="scroll"
                                        inlineFocusSelectedMonth={false}
                                        maxDate={2019-03-02T23:00:00.000Z}
                                        monthsShown={1}
                                        nextMonthButtonLabel="Next Month"
                                        nextYearButtonLabel="Next Year"
                                        onBlur={[Function]}
                                        onCalendarClose={[Function]}
                                        onCalendarOpen={[Function]}
                                        onChange={[Function]}
                                        onClickOutside={[Function]}
                                        onFocus={[Function]}
                                        onInputClick={[Function]}
                                        onInputError={[Function]}
                                        onKeyDown={[Function]}
                                        onMonthChange={[Function]}
                                        onSelect={[Function]}
                                        onYearChange={[Function]}
                                        popperContainer={[Function]}
                                        preventOpenOnFocus={false}
                                        previousMonthButtonLabel="Previous Month"
                                        previousYearButtonLabel="Previous Year"
                                        readOnly={false}
                                        renderDayContents={[Function]}
                                        selected={2019-04-12T00:00:00.000Z}
                                        shouldCloseOnSelect={true}
                                        showMonthYearPicker={false}
                                        showPopperArrow={true}
                                        showPreviousMonths={false}
                                        showQuarterYearPicker={false}
                                        showTimeInput={false}
                                        showTimeSelect={false}
                                        strictParsing={false}
                                        timeCaption="Time"
                                        timeInputLabel="Time"
                                        timeIntervals={30}
                                        withPortal={false}
                                      >
                                        <t
                                          hidePopper={true}
                                          popperComponent={null}
                                          popperContainer={[Function]}
                                          popperModifiers={
                                            Object {
                                              "preventOverflow": Object {
                                                "boundariesElement": "viewport",
                                                "enabled": true,
                                                "escapeWithReference": true,
                                              },
                                            }
                                          }
                                          popperPlacement="bottom-start"
                                          popperProps={Object {}}
                                          targetComponent={
                                            <div
                                              className="react-datepicker__input-container"
                                            >
                                              <input
                                                className="consent-date-field"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                readOnly={false}
                                                type="text"
                                                value="12 Apr 2019"
                                              />
                                            </div>
                                          }
                                        >
                                          <Manager
                                            className="react-datepicker-manager"
                                          >
                                            <Reference>
                                              <InnerReference
                                                setReferenceNode={[Function]}
                                              >
                                                <div
                                                  className="react-datepicker-wrapper"
                                                >
                                                  <div
                                                    className="react-datepicker__input-container"
                                                  >
                                                    <input
                                                      className="consent-date-field"
                                                      disabled={false}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      readOnly={false}
                                                      type="text"
                                                      value="12 Apr 2019"
                                                    />
                                                  </div>
                                                </div>
                                              </InnerReference>
                                            </Reference>
                                            <CalendarContainer>
                                              <Portal
                                                container={null}
                                              />
                                            </CalendarContainer>
                                          </Manager>
                                        </t>
                                      </t>
                                    </div>
                                  </td>
                                </DateOfConsentCell>
                              </tr>
                            </DateOfConsentRow>
                          </tbody>
                        </table>
                        <button
                          style={
                            Object {
                              "display": "none",
                            }
                          }
                          type="submit"
                        />
                      </form>
                    </Form>
                    <Errors
                      error={
                        Object {
                          "response": Object {
                            "data": Object {
                              "issues": Array [
                                Object {
                                  "field": null,
                                  "message": "A SERVER SIDE ERROR",
                                  "reference": null,
                                },
                              ],
                            },
                          },
                        }
                      }
                      errorMessages={Array []}
                    >
                      <ModalErrors
                        requestError={
                          Object {
                            "response": Object {
                              "data": Object {
                                "issues": Array [
                                  Object {
                                    "field": null,
                                    "message": "A SERVER SIDE ERROR",
                                    "reference": null,
                                  },
                                ],
                              },
                            },
                          }
                        }
                        validationErrors={Array []}
                      >
                        <div
                          className="alert-box alert margin-top"
                        >
                          The form returned some errors
                          <ul
                            className="bullet"
                          />
                          <RequestError
                            error={
                              Object {
                                "response": Object {
                                  "data": Object {
                                    "issues": Array [
                                      Object {
                                        "field": null,
                                        "message": "A SERVER SIDE ERROR",
                                        "reference": null,
                                      },
                                    ],
                                  },
                                },
                              }
                            }
                          >
                            <Error
                              error={
                                Object {
                                  "issues": Array [
                                    Object {
                                      "field": null,
                                      "message": "A SERVER SIDE ERROR",
                                      "reference": null,
                                    },
                                  ],
                                }
                              }
                            >
                              <Issues
                                issues={
                                  Array [
                                    Object {
                                      "field": null,
                                      "message": "A SERVER SIDE ERROR",
                                      "reference": null,
                                    },
                                  ]
                                }
                              >
                                <ul
                                  className="bullet"
                                >
                                  <Issue
                                    issue={
                                      Object {
                                        "field": null,
                                        "message": "A SERVER SIDE ERROR",
                                        "reference": null,
                                      }
                                    }
                                    key="0"
                                  >
                                    <ErrorMessage
                                      message="A SERVER SIDE ERROR"
                                    >
                                      <li>
                                        A SERVER SIDE ERROR
                                      </li>
                                    </ErrorMessage>
                                  </Issue>
                                </ul>
                              </Issues>
                            </Error>
                          </RequestError>
                        </div>
                      </ModalErrors>
                    </Errors>
                  </div>
                  <div
                    className="modal-buttons"
                  >
                    <a
                      className="button modal-ok "
                      data-cy="modal-ok-button"
                      onClick={[Function]}
                    >
                      OK
                      <div
                        className="bar"
                      />
                    </a>
                    <a
                      className="button secondary modal-cancel"
                      onClick={[Function]}
                    >
                      Cancel
                    </a>
                  </div>
                </div>
              </div>
            </ModalPortal>
          </Portal>
        </Modal>
      </Modal>
    </OpenState>
  </AddSubjectPane>
</AddSubject>
`;

exports[`Rendering the component The component is disabled by default 1`] = `
<AddSubjectPane
  dateOfBirth={2019-03-02T23:00:00.000Z}
  dateOfBirthInfoText="The participant's date of birth"
  dateOfConsent={2019-03-02T23:00:00.000Z}
  dateOfConsentInfoText="Date at which the patient has given informed consent to enter the study"
  dateOfConsentValid={true}
  disabled={true}
  disabledMessage="You must be an assigned investigator in order to add participants to this study."
  errorMessages={Array []}
  firstName=""
  firstNameInfoText="The participant's first name"
  lastName=""
  lastNameInfoText="The participant's last name"
  onClose={[Function]}
  onDateOfBirthChanged={[Function]}
  onDateOfConsentChanged={[Function]}
  onFirstNameChanged={[Function]}
  onLastNameChanged={[Function]}
  onOpen={[Function]}
  onPatientIdentifierChanged={[Function]}
  onPatientIdentifierSourceChanged={[Function]}
  onSubjectAdded={[Function]}
  onSubjectIdentifierChanged={[Function]}
  open={false}
  patientIdentifier=""
  patientIdentifierInfoText="Identifier used to reference the participant within the healthcare source systems. The patient id is only visible to investigators and is not exported to the linked sponsor's EDC system"
  patientIdentifierSource="HIS_01"
  patientIdentifierSourceInfoText="Domain in which the patient identifier was issued by the patient identification management system (MPI)"
  patientIdentifierSources={
    Array [
      "HIS_01",
    ]
  }
  patientIdentifierValid={true}
  subjectIdentifier=""
  subjectIdentifierInfoText="Identifier used to reference the participant in this study (as issued by the IVRS or a similar system)"
  subjectIdentifierValid={true}
/>
`;
